{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\live\\\\src\\\\@fuse\\\\core\\\\formsy\\\\CheckboxFormsy.js\";\nimport _ from '@lodash';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { withFormsy } from 'formsy-react';\nimport React from 'react';\n\nfunction CheckboxFormsy(props) {\n  var importedProps = _.pick(props, ['checkedIcon', 'classes', 'color', 'disabled', 'disableRipple', 'icon', 'id', 'indeterminate', 'indeterminateIcon', 'inputProps', 'inputRef', 'onChange', 'variant']); // An error message is returned only if the component is invalid\n\n\n  var errorMessage = props.errorMessage,\n      value = props.value;\n\n  function changeValue(event) {\n    props.setValue(event.target.checked);\n\n    if (props.onChange) {\n      props.onChange(event);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    error: Boolean(!props.isPristine && props.showRequired || errorMessage),\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, importedProps, {\n      type: \"checkbox\",\n      checked: value,\n      onChange: changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }\n    })),\n    label: props.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }), Boolean(errorMessage) && /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }\n  }, errorMessage));\n}\n\nexport default React.memo(withFormsy(CheckboxFormsy));","map":{"version":3,"sources":["D:/Projects/live/src/@fuse/core/formsy/CheckboxFormsy.js"],"names":["_","Checkbox","FormControl","FormControlLabel","FormHelperText","withFormsy","React","CheckboxFormsy","props","importedProps","pick","errorMessage","value","changeValue","event","setValue","target","checked","onChange","Boolean","isPristine","showRequired","className","label","memo"],"mappings":";AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC9B,MAAMC,aAAa,GAAGT,CAAC,CAACU,IAAF,CAAOF,KAAP,EAAc,CACnC,aADmC,EAEnC,SAFmC,EAGnC,OAHmC,EAInC,UAJmC,EAKnC,eALmC,EAMnC,MANmC,EAOnC,IAPmC,EAQnC,eARmC,EASnC,mBATmC,EAUnC,YAVmC,EAWnC,UAXmC,EAYnC,UAZmC,EAanC,SAbmC,CAAd,CAAtB,CAD8B,CAiB9B;;;AAjB8B,MAkBtBG,YAlBsB,GAkBEH,KAlBF,CAkBtBG,YAlBsB;AAAA,MAkBRC,KAlBQ,GAkBEJ,KAlBF,CAkBRI,KAlBQ;;AAoB9B,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC3BN,IAAAA,KAAK,CAACO,QAAN,CAAeD,KAAK,CAACE,MAAN,CAAaC,OAA5B;;AACA,QAAIT,KAAK,CAACU,QAAV,EAAoB;AACnBV,MAAAA,KAAK,CAACU,QAAN,CAAeJ,KAAf;AACA;AACD;;AAED,sBACC,oBAAC,WAAD;AACC,IAAA,KAAK,EAAEK,OAAO,CAAE,CAACX,KAAK,CAACY,UAAP,IAAqBZ,KAAK,CAACa,YAA5B,IAA6CV,YAA9C,CADf;AAEC,IAAA,SAAS,EAAEH,KAAK,CAACc,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIC,oBAAC,gBAAD;AACC,IAAA,OAAO,eAAE,oBAAC,QAAD,oBAAcb,aAAd;AAA6B,MAAA,IAAI,EAAC,UAAlC;AAA6C,MAAA,OAAO,EAAEG,KAAtD;AAA6D,MAAA,QAAQ,EAAEC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADV;AAEC,IAAA,KAAK,EAAEL,KAAK,CAACe,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAQEJ,OAAO,CAACR,YAAD,CAAP,iBAAyB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,YAAjB,CAR3B,CADD;AAYA;;AAED,eAAeL,KAAK,CAACkB,IAAN,CAAWnB,UAAU,CAACE,cAAD,CAArB,CAAf","sourcesContent":["import _ from '@lodash';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { withFormsy } from 'formsy-react';\nimport React from 'react';\n\nfunction CheckboxFormsy(props) {\n\tconst importedProps = _.pick(props, [\n\t\t'checkedIcon',\n\t\t'classes',\n\t\t'color',\n\t\t'disabled',\n\t\t'disableRipple',\n\t\t'icon',\n\t\t'id',\n\t\t'indeterminate',\n\t\t'indeterminateIcon',\n\t\t'inputProps',\n\t\t'inputRef',\n\t\t'onChange',\n\t\t'variant'\n\t]);\n\n\t// An error message is returned only if the component is invalid\n\tconst { errorMessage, value } = props;\n\n\tfunction changeValue(event) {\n\t\tprops.setValue(event.target.checked);\n\t\tif (props.onChange) {\n\t\t\tprops.onChange(event);\n\t\t}\n\t}\n\n\treturn (\n\t\t<FormControl\n\t\t\terror={Boolean((!props.isPristine && props.showRequired) || errorMessage)}\n\t\t\tclassName={props.className}\n\t\t>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={<Checkbox {...importedProps} type=\"checkbox\" checked={value} onChange={changeValue} />}\n\t\t\t\tlabel={props.label}\n\t\t\t/>\n\t\t\t{Boolean(errorMessage) && <FormHelperText>{errorMessage}</FormHelperText>}\n\t\t</FormControl>\n\t);\n}\n\nexport default React.memo(withFormsy(CheckboxFormsy));\n"]},"metadata":{},"sourceType":"module"}