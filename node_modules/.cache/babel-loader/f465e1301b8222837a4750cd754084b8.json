{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\live\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport history from '@history';\nimport _ from '@lodash';\nimport auth0Service from 'app/services/auth0Service';\nimport firebaseService from 'app/services/firebaseService';\nimport jwtService from 'app/services/jwtService';\nimport * as MessageActions from 'app/store/actions/fuse/message.actions';\nimport * as FuseActions from 'app/store/actions/fuse';\nimport firebase from 'firebase/app';\nexport var SET_USER_DATA = '[USER] SET DATA';\nexport var REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport var USER_LOGGED_OUT = '[USER] LOGGED OUT';\n/**\n * Set user data from Auth0 token data\n */\n\nexport function setUserDataAuth0(tokenData) {\n  var user = {\n    role: ['admin'],\n    from: 'auth0',\n    data: {\n      displayName: tokenData.username,\n      photoURL: tokenData.picture,\n      email: tokenData.email,\n      settings: tokenData.user_metadata && tokenData.user_metadata.settings ? tokenData.user_metadata.settings : {},\n      shortcuts: tokenData.user_metadata && tokenData.user_metadata.shortcuts ? tokenData.user_metadata.shortcuts : []\n    }\n  };\n  return setUserData(user);\n}\n/**\n * Set user data from Firebase data\n */\n\nexport function setUserDataFirebase(user, authUser) {\n  if (user && user.data && user.data.settings && user.data.settings.theme && user.data.settings.layout && user.data.settings.layout.style) {\n    // Set user data but do not update\n    return setUserData(user);\n  } // Create missing user settings\n\n\n  return createUserSettingsFirebase(authUser);\n}\n/**\n * Create User Settings with Firebase data\n */\n\nexport function createUserSettingsFirebase(authUser) {\n  return function (dispatch, getState) {\n    var guestUser = getState().auth.user;\n    var fuseDefaultSettings = getState().fuse.settings.defaults;\n\n    var _firebase$auth = firebase.auth(),\n        currentUser = _firebase$auth.currentUser;\n    /**\n     * Merge with current Settings\n     */\n\n\n    var user = _.merge({}, guestUser, {\n      uid: authUser.uid,\n      from: 'firebase',\n      role: ['admin'],\n      data: {\n        displayName: authUser.displayName,\n        email: authUser.email,\n        settings: _objectSpread({}, fuseDefaultSettings)\n      }\n    });\n\n    currentUser.updateProfile(user.data);\n    updateUserData(user, dispatch);\n    return dispatch(setUserData(user));\n  };\n}\n/**\n *\n * Set User Data JWT\n */\n\nexport function setJWTUserData(authUser) {\n  var user = {\n    role: [authUser.user_type],\n    data: {\n      id: authUser.id,\n      displayName: authUser.name,\n      email: authUser.email,\n      role: authUser.user_type,\n      photoURL: authUser.photo_url,\n      xid: authUser.user_type === 'vendor' ? authUser.xid : {}\n    }\n  };\n  return setUserData(user);\n}\n/**\n * Set User Data\n */\n\nexport function setUserData(user) {\n  return function (dispatch) {\n    /*\n          You can redirect the logged-in user to a specific route depending on his role\n           */\n    // history.location.state = {\n    //     redirectUrl: user.redirectUrl // for example 'apps/academy'\n    // }\n\n    /*\n          Set User Settings\n           */\n    // dispatch(FuseActions.setDefaultSettings(user.data.settings));\n\n    /*\n          Set User Data\n           */\n    dispatch({\n      type: SET_USER_DATA,\n      payload: user\n    });\n  };\n}\n/**\n * Update User Settings\n */\n\nexport function updateUserSettings(settings) {\n  return function (dispatch, getState) {\n    var oldUser = getState().auth.user;\n\n    var user = _.merge({}, oldUser, {\n      data: {\n        settings: settings\n      }\n    });\n\n    updateUserData(user, dispatch);\n    return dispatch(setUserData(user));\n  };\n}\n/**\n * Update User Shortcuts\n */\n\nexport function updateUserShortcuts(shortcuts) {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    var newUser = _objectSpread(_objectSpread({}, user), {}, {\n      data: _objectSpread(_objectSpread({}, user.data), {}, {\n        shortcuts: shortcuts\n      })\n    });\n\n    updateUserData(newUser, dispatch);\n    return dispatch(setUserData(newUser));\n  };\n}\n/**\n * Remove User Data\n */\n\nexport function removeUserData() {\n  return {\n    type: REMOVE_USER_DATA\n  };\n}\n/**\n * Logout\n */\n\nexport function logoutUser() {\n  return function (dispatch, getState) {\n    var user = getState().auth.user;\n\n    if (!user.role || user.role.length === 0) {\n      // is guest\n      return null;\n    }\n\n    history.push({\n      pathname: '/'\n    });\n\n    switch (user.from) {\n      case 'firebase':\n        {\n          firebaseService.signOut();\n          break;\n        }\n\n      case 'auth0':\n        {\n          auth0Service.logout();\n          break;\n        }\n\n      default:\n        {\n          jwtService.logout();\n        }\n    }\n\n    dispatch(FuseActions.setInitialSettings());\n    return dispatch({\n      type: USER_LOGGED_OUT\n    });\n  };\n}\n/**\n * Update User Data\n */\n\nfunction updateUserData(user, dispatch) {\n  if (!user.role || user.role.length === 0) {\n    // is guest\n    return;\n  }\n\n  switch (user.from) {\n    case 'firebase':\n      {\n        firebaseService.updateUserData(user).then(function () {\n          dispatch(MessageActions.showMessage({\n            message: 'User data saved to firebase'\n          }));\n        }).catch(function (error) {\n          dispatch(MessageActions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n\n    case 'auth0':\n      {\n        auth0Service.updateUserData({\n          settings: user.data.settings,\n          shortcuts: user.data.shortcuts\n        }).then(function () {\n          dispatch(MessageActions.showMessage({\n            message: 'User data saved to auth0'\n          }));\n        }).catch(function (error) {\n          dispatch(MessageActions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n\n    default:\n      {\n        jwtService.updateUserData(user).then(function () {\n          dispatch(MessageActions.showMessage({\n            message: 'User data saved with api'\n          }));\n        }).catch(function (error) {\n          dispatch(MessageActions.showMessage({\n            message: error.message\n          }));\n        });\n        break;\n      }\n  }\n}","map":{"version":3,"sources":["D:/Projects/live/src/app/auth/store/actions/user.actions.js"],"names":["history","_","auth0Service","firebaseService","jwtService","MessageActions","FuseActions","firebase","SET_USER_DATA","REMOVE_USER_DATA","USER_LOGGED_OUT","setUserDataAuth0","tokenData","user","role","from","data","displayName","username","photoURL","picture","email","settings","user_metadata","shortcuts","setUserData","setUserDataFirebase","authUser","theme","layout","style","createUserSettingsFirebase","dispatch","getState","guestUser","auth","fuseDefaultSettings","fuse","defaults","currentUser","merge","uid","updateProfile","updateUserData","setJWTUserData","user_type","id","name","photo_url","xid","type","payload","updateUserSettings","oldUser","updateUserShortcuts","newUser","removeUserData","logoutUser","length","push","pathname","signOut","logout","setInitialSettings","then","showMessage","message","catch","error"],"mappings":"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","sourcesContent":["import history from '@history';\nimport _ from '@lodash';\nimport auth0Service from 'app/services/auth0Service';\nimport firebaseService from 'app/services/firebaseService';\nimport jwtService from 'app/services/jwtService';\nimport * as MessageActions from 'app/store/actions/fuse/message.actions';\nimport * as FuseActions from 'app/store/actions/fuse';\nimport firebase from 'firebase/app';\n\nexport const SET_USER_DATA = '[USER] SET DATA';\nexport const REMOVE_USER_DATA = '[USER] REMOVE DATA';\nexport const USER_LOGGED_OUT = '[USER] LOGGED OUT';\n\n/**\n * Set user data from Auth0 token data\n */\nexport function setUserDataAuth0(tokenData) {\n\tconst user = {\n\t\trole: ['admin'],\n\t\tfrom: 'auth0',\n\t\tdata: {\n\t\t\tdisplayName: tokenData.username,\n\t\t\tphotoURL: tokenData.picture,\n\t\t\temail: tokenData.email,\n\t\t\tsettings:\n\t\t\t\ttokenData.user_metadata && tokenData.user_metadata.settings ? tokenData.user_metadata.settings : {},\n\t\t\tshortcuts:\n\t\t\t\ttokenData.user_metadata && tokenData.user_metadata.shortcuts ? tokenData.user_metadata.shortcuts : []\n\t\t}\n\t};\n\n\treturn setUserData(user);\n}\n\n/**\n * Set user data from Firebase data\n */\nexport function setUserDataFirebase(user, authUser) {\n\tif (\n\t\tuser &&\n\t\tuser.data &&\n\t\tuser.data.settings &&\n\t\tuser.data.settings.theme &&\n\t\tuser.data.settings.layout &&\n\t\tuser.data.settings.layout.style\n\t) {\n\t\t// Set user data but do not update\n\t\treturn setUserData(user);\n\t}\n\n\t// Create missing user settings\n\treturn createUserSettingsFirebase(authUser);\n}\n\n/**\n * Create User Settings with Firebase data\n */\nexport function createUserSettingsFirebase(authUser) {\n\treturn (dispatch, getState) => {\n\t\tconst guestUser = getState().auth.user;\n\t\tconst fuseDefaultSettings = getState().fuse.settings.defaults;\n\t\tconst { currentUser } = firebase.auth();\n\n\t\t/**\n\t\t * Merge with current Settings\n\t\t */\n\t\tconst user = _.merge({}, guestUser, {\n\t\t\tuid: authUser.uid,\n\t\t\tfrom: 'firebase',\n\t\t\trole: ['admin'],\n\t\t\tdata: {\n\t\t\t\tdisplayName: authUser.displayName,\n\t\t\t\temail: authUser.email,\n\t\t\t\tsettings: { ...fuseDefaultSettings }\n\t\t\t}\n\t\t});\n\t\tcurrentUser.updateProfile(user.data);\n\n\t\tupdateUserData(user, dispatch);\n\t\treturn dispatch(setUserData(user));\n\t};\n}\n\n/**\n *\n * Set User Data JWT\n */\n\nexport function setJWTUserData(authUser) {\n\tconst user = {\n\t\trole: [authUser.user_type],\n\t\tdata: {\n\t\t\tid: authUser.id,\n\t\t\tdisplayName: authUser.name,\n\t\t\temail: authUser.email,\n\t\t\trole: authUser.user_type,\n\t\t\tphotoURL: authUser.photo_url,\n\t\t\txid: authUser.user_type === 'vendor' ? authUser.xid : {}\n\t\t}\n\t};\n\treturn setUserData(user);\n}\n/**\n * Set User Data\n */\nexport function setUserData(user) {\n\treturn dispatch => {\n\t\t/*\n        You can redirect the logged-in user to a specific route depending on his role\n         */\n\n\t\t// history.location.state = {\n\t\t//     redirectUrl: user.redirectUrl // for example 'apps/academy'\n\t\t// }\n\n\t\t/*\n        Set User Settings\n         */\n\t\t// dispatch(FuseActions.setDefaultSettings(user.data.settings));\n\n\t\t/*\n        Set User Data\n         */\n\t\tdispatch({\n\t\t\ttype: SET_USER_DATA,\n\t\t\tpayload: user\n\t\t});\n\t};\n}\n\n/**\n * Update User Settings\n */\nexport function updateUserSettings(settings) {\n\treturn (dispatch, getState) => {\n\t\tconst oldUser = getState().auth.user;\n\t\tconst user = _.merge({}, oldUser, { data: { settings } });\n\n\t\tupdateUserData(user, dispatch);\n\n\t\treturn dispatch(setUserData(user));\n\t};\n}\n\n/**\n * Update User Shortcuts\n */\nexport function updateUserShortcuts(shortcuts) {\n\treturn (dispatch, getState) => {\n\t\tconst { user } = getState().auth;\n\t\tconst newUser = {\n\t\t\t...user,\n\t\t\tdata: {\n\t\t\t\t...user.data,\n\t\t\t\tshortcuts\n\t\t\t}\n\t\t};\n\n\t\tupdateUserData(newUser, dispatch);\n\n\t\treturn dispatch(setUserData(newUser));\n\t};\n}\n\n/**\n * Remove User Data\n */\nexport function removeUserData() {\n\treturn {\n\t\ttype: REMOVE_USER_DATA\n\t};\n}\n\n/**\n * Logout\n */\nexport function logoutUser() {\n\treturn (dispatch, getState) => {\n\t\tconst { user } = getState().auth;\n\n\t\tif (!user.role || user.role.length === 0) {\n\t\t\t// is guest\n\t\t\treturn null;\n\t\t}\n\n\t\thistory.push({\n\t\t\tpathname: '/'\n\t\t});\n\n\t\tswitch (user.from) {\n\t\t\tcase 'firebase': {\n\t\t\t\tfirebaseService.signOut();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'auth0': {\n\t\t\t\tauth0Service.logout();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tjwtService.logout();\n\t\t\t}\n\t\t}\n\n\t\tdispatch(FuseActions.setInitialSettings());\n\n\t\treturn dispatch({\n\t\t\ttype: USER_LOGGED_OUT\n\t\t});\n\t};\n}\n\n/**\n * Update User Data\n */\nfunction updateUserData(user, dispatch) {\n\tif (!user.role || user.role.length === 0) {\n\t\t// is guest\n\t\treturn;\n\t}\n\n\tswitch (user.from) {\n\t\tcase 'firebase': {\n\t\t\tfirebaseService\n\t\t\t\t.updateUserData(user)\n\t\t\t\t.then(() => {\n\t\t\t\t\tdispatch(MessageActions.showMessage({ message: 'User data saved to firebase' }));\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tdispatch(MessageActions.showMessage({ message: error.message }));\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tcase 'auth0': {\n\t\t\tauth0Service\n\t\t\t\t.updateUserData({\n\t\t\t\t\tsettings: user.data.settings,\n\t\t\t\t\tshortcuts: user.data.shortcuts\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tdispatch(MessageActions.showMessage({ message: 'User data saved to auth0' }));\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tdispatch(MessageActions.showMessage({ message: error.message }));\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\tjwtService\n\t\t\t\t.updateUserData(user)\n\t\t\t\t.then(() => {\n\t\t\t\t\tdispatch(MessageActions.showMessage({ message: 'User data saved with api' }));\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tdispatch(MessageActions.showMessage({ message: error.message }));\n\t\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}