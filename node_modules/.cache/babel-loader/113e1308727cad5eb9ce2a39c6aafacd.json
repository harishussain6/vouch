{"ast":null,"code":"module.exports = function (event) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    var files = event.target.files;\n    var len = files.length;\n\n    if (len > 1) {\n      reject(new DOMException(\"Only one file can be uploaded at a time\"));\n    } else {\n      reader.onerror = function () {\n        reader.abort();\n        reject(new DOMException(\"Problem parsing input file.\"));\n      };\n\n      var file = files[0];\n\n      reader.onload = function (evt) {\n        var uint = new Uint8Array(evt.target.result);\n        var bytes = [];\n        uint.map(function (byte) {\n          bytes.push(byte.toString(16));\n        });\n        var hex = bytes.join('').toUpperCase();\n        var base64 = reader.result.split(',')[1];\n        file.base64 = base64;\n        file.binaryFileType = getMimetype(hex);\n        resolve(file);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  });\n};\n\nvar getMimetype = function getMimetype(signature) {\n  switch (signature) {\n    case '89504E47':\n      return 'image/png';\n\n    case '47494638':\n      return 'image/gif';\n\n    case '25504446':\n      return 'application/pdf';\n\n    case 'FFD8FFDB':\n    case 'FFD8FFE0':\n      return 'image/jpeg';\n\n    case '504B0304':\n      return 'application/zip';\n\n    default:\n      return 'Unknown filetype';\n  }\n};","map":null,"metadata":{},"sourceType":"script"}