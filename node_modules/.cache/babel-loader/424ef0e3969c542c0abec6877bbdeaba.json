{"ast":null,"code":"import _ from'@lodash';import FilledInput from'@material-ui/core/FilledInput';import FormControl from'@material-ui/core/FormControl';import FormHelperText from'@material-ui/core/FormHelperText';import Input from'@material-ui/core/Input';import InputLabel from'@material-ui/core/InputLabel';import OutlinedInput from'@material-ui/core/OutlinedInput';import Select from'@material-ui/core/Select';import{withFormsy}from'formsy-react';import React from'react';function SelectFormsy(props){var importedProps=_.pick(props,['autoWidth','children','classes','displayEmpty','input','inputProps','MenuProps','multiple','native','onChange','onClose','onOpen','open','renderValue','SelectDisplayProps','value','variant']);// An error message is returned only if the component is invalid\nvar errorMessage=props.errorMessage,value=props.value;function input(){switch(importedProps.variant){case'outlined':return/*#__PURE__*/React.createElement(OutlinedInput,{labelWidth:props.label.length*8,id:props.name});case'filled':return/*#__PURE__*/React.createElement(FilledInput,{id:props.name});default:return/*#__PURE__*/React.createElement(Input,{id:props.name});}}function changeValue(event){props.setValue(event.target.value);if(props.onChange){props.onChange(event);}}return/*#__PURE__*/React.createElement(FormControl,{error:Boolean(!props.isPristine&&props.showRequired||errorMessage),className:props.className,variant:importedProps.variant},props.label&&/*#__PURE__*/React.createElement(InputLabel,{htmlFor:props.name},props.label),/*#__PURE__*/React.createElement(Select,Object.assign({},importedProps,{value:value,onChange:changeValue,input:input()})),Boolean(errorMessage)&&/*#__PURE__*/React.createElement(FormHelperText,null,errorMessage));}export default React.memo(withFormsy(SelectFormsy));","map":null,"metadata":{},"sourceType":"module"}