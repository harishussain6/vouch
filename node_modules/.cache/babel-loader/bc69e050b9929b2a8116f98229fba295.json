{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\live\\\\src\\\\@fuse\\\\core\\\\formsy\\\\FuseChipSelectFormsy.js\";\nimport FuseChipSelect from '@fuse/core/FuseChipSelect';\nimport _ from '@lodash';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport clsx from 'clsx';\nimport { withFormsy } from 'formsy-react';\nimport React from 'react';\n\nfunction FuseChipSelectFormsy(props) {\n  var importedProps = _.pick(props, ['children', 'classes', 'className', 'defaultValue', 'disabled', 'fullWidth', 'id', 'label', 'name', 'onBlur', 'onChange', 'onFocus', 'placeholder', 'required', 'textFieldProps', 'variant', 'isMulti', 'options', 'errorMessage']); // An error message is returned only if the component is invalid\n\n\n  var errorMessage = props.errorMessage,\n      value = props.value;\n\n  function changeValue(val, selectedOptions) {\n    if (props.multiple) {\n      props.setValue(selectedOptions.map(function (option) {\n        return option.value;\n      }));\n    } else {\n      props.setValue(val);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    error: Boolean(!props.isPristine && props.showRequired || errorMessage),\n    className: clsx(props.className, 'z-10', props.showRequired ? 'required' : '', props.showError ? 'error' : null),\n    variant: importedProps.variant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, props.label && /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }\n  }, props.label), /*#__PURE__*/React.createElement(FuseChipSelect, Object.assign({}, importedProps, {\n    value: value,\n    onChange: changeValue,\n    error: Boolean(!props.isPristine && props.showRequired || errorMessage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  })), Boolean(errorMessage) && /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 30\n    }\n  }, errorMessage));\n}\n\nexport default React.memo(withFormsy(FuseChipSelectFormsy));","map":{"version":3,"sources":["D:/Projects/live/src/@fuse/core/formsy/FuseChipSelectFormsy.js"],"names":["FuseChipSelect","_","FormControl","FormHelperText","InputLabel","clsx","withFormsy","React","FuseChipSelectFormsy","props","importedProps","pick","errorMessage","value","changeValue","val","selectedOptions","multiple","setValue","map","option","Boolean","isPristine","showRequired","className","showError","variant","label","name","memo"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACpC,MAAMC,aAAa,GAAGT,CAAC,CAACU,IAAF,CAAOF,KAAP,EAAc,CACnC,UADmC,EAEnC,SAFmC,EAGnC,WAHmC,EAInC,cAJmC,EAKnC,UALmC,EAMnC,WANmC,EAOnC,IAPmC,EAQnC,OARmC,EASnC,MATmC,EAUnC,QAVmC,EAWnC,UAXmC,EAYnC,SAZmC,EAanC,aAbmC,EAcnC,UAdmC,EAenC,gBAfmC,EAgBnC,SAhBmC,EAiBnC,SAjBmC,EAkBnC,SAlBmC,EAmBnC,cAnBmC,CAAd,CAAtB,CADoC,CAuBpC;;;AAvBoC,MAwB5BG,YAxB4B,GAwBJH,KAxBI,CAwB5BG,YAxB4B;AAAA,MAwBdC,KAxBc,GAwBJJ,KAxBI,CAwBdI,KAxBc;;AA0BpC,WAASC,WAAT,CAAqBC,GAArB,EAA0BC,eAA1B,EAA2C;AAC1C,QAAIP,KAAK,CAACQ,QAAV,EAAoB;AACnBR,MAAAA,KAAK,CAACS,QAAN,CAAeF,eAAe,CAACG,GAAhB,CAAoB,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACP,KAAX;AAAA,OAA1B,CAAf;AACA,KAFD,MAEO;AACNJ,MAAAA,KAAK,CAACS,QAAN,CAAeH,GAAf;AACA;AACD;;AAED,sBACC,oBAAC,WAAD;AACC,IAAA,KAAK,EAAEM,OAAO,CAAE,CAACZ,KAAK,CAACa,UAAP,IAAqBb,KAAK,CAACc,YAA5B,IAA6CX,YAA9C,CADf;AAEC,IAAA,SAAS,EAAEP,IAAI,CACdI,KAAK,CAACe,SADQ,EAEd,MAFc,EAGdf,KAAK,CAACc,YAAN,GAAqB,UAArB,GAAkC,EAHpB,EAIdd,KAAK,CAACgB,SAAN,GAAkB,OAAlB,GAA4B,IAJd,CAFhB;AAQC,IAAA,OAAO,EAAEf,aAAa,CAACgB,OARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUEjB,KAAK,CAACkB,KAAN,iBAAe,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAElB,KAAK,CAACmB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCnB,KAAK,CAACkB,KAAxC,CAVjB,eAWC,oBAAC,cAAD,oBACKjB,aADL;AAEC,IAAA,KAAK,EAAEG,KAFR;AAGC,IAAA,QAAQ,EAAEC,WAHX;AAIC,IAAA,KAAK,EAAEO,OAAO,CAAE,CAACZ,KAAK,CAACa,UAAP,IAAqBb,KAAK,CAACc,YAA5B,IAA6CX,YAA9C,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXD,EAiBES,OAAO,CAACT,YAAD,CAAP,iBAAyB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,YAAjB,CAjB3B,CADD;AAqBA;;AAED,eAAeL,KAAK,CAACsB,IAAN,CAAWvB,UAAU,CAACE,oBAAD,CAArB,CAAf","sourcesContent":["import FuseChipSelect from '@fuse/core/FuseChipSelect';\nimport _ from '@lodash';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport clsx from 'clsx';\nimport { withFormsy } from 'formsy-react';\nimport React from 'react';\n\nfunction FuseChipSelectFormsy(props) {\n\tconst importedProps = _.pick(props, [\n\t\t'children',\n\t\t'classes',\n\t\t'className',\n\t\t'defaultValue',\n\t\t'disabled',\n\t\t'fullWidth',\n\t\t'id',\n\t\t'label',\n\t\t'name',\n\t\t'onBlur',\n\t\t'onChange',\n\t\t'onFocus',\n\t\t'placeholder',\n\t\t'required',\n\t\t'textFieldProps',\n\t\t'variant',\n\t\t'isMulti',\n\t\t'options',\n\t\t'errorMessage'\n\t]);\n\n\t// An error message is returned only if the component is invalid\n\tconst { errorMessage, value } = props;\n\n\tfunction changeValue(val, selectedOptions) {\n\t\tif (props.multiple) {\n\t\t\tprops.setValue(selectedOptions.map(option => option.value));\n\t\t} else {\n\t\t\tprops.setValue(val);\n\t\t}\n\t}\n\n\treturn (\n\t\t<FormControl\n\t\t\terror={Boolean((!props.isPristine && props.showRequired) || errorMessage)}\n\t\t\tclassName={clsx(\n\t\t\t\tprops.className,\n\t\t\t\t'z-10',\n\t\t\t\tprops.showRequired ? 'required' : '',\n\t\t\t\tprops.showError ? 'error' : null\n\t\t\t)}\n\t\t\tvariant={importedProps.variant}\n\t\t>\n\t\t\t{props.label && <InputLabel htmlFor={props.name}>{props.label}</InputLabel>}\n\t\t\t<FuseChipSelect\n\t\t\t\t{...importedProps}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={changeValue}\n\t\t\t\terror={Boolean((!props.isPristine && props.showRequired) || errorMessage)}\n\t\t\t/>\n\t\t\t{Boolean(errorMessage) && <FormHelperText>{errorMessage}</FormHelperText>}\n\t\t</FormControl>\n\t);\n}\n\nexport default React.memo(withFormsy(FuseChipSelectFormsy));\n"]},"metadata":{},"sourceType":"module"}