{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\live\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\live\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\Projects\\\\live\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Projects\\\\live\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport FuseUtils from '@fuse/utils';\nimport AppContext from 'app/AppContext';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { matchRoutes } from 'react-router-config';\nimport { withRouter } from 'react-router-dom';\n\nvar FuseAuthorization = /*#__PURE__*/function (_Component) {\n  _inherits(FuseAuthorization, _Component);\n\n  var _super = _createSuper(FuseAuthorization);\n\n  function FuseAuthorization(props, context) {\n    var _this;\n\n    _classCallCheck(this, FuseAuthorization);\n\n    _this = _super.call(this, props);\n    var routes = context.routes;\n    _this.state = {\n      accessGranted: true,\n      routes: routes\n    };\n    return _this;\n  }\n\n  _createClass(FuseAuthorization, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.state.accessGranted) {\n        this.redirectRoute();\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return nextState.accessGranted !== this.state.accessGranted;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this.state.accessGranted) {\n        this.redirectRoute();\n      }\n    }\n  }, {\n    key: \"redirectRoute\",\n    value: function redirectRoute() {\n      var _this$props = this.props,\n          location = _this$props.location,\n          userRole = _this$props.userRole,\n          history = _this$props.history;\n      var pathname = location.pathname,\n          state = location.state;\n      var redirectUrl = state && state.redirectUrl ? state.redirectUrl : '/';\n      /*\n            User is guest\n            Redirect to Login Page\n            */\n\n      if (!userRole || userRole.length === 0) {\n        history.push({\n          pathname: '/login',\n          state: {\n            redirectUrl: pathname\n          }\n        });\n      } else {\n        /*\n             User is member\n             User must be on unAuthorized page or just logged in\n             Redirect to dashboard or redirectUrl\n             */\n        history.push({\n          pathname: redirectUrl\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.info('Fuse Authorization rendered', accessGranted);\n      return this.state.accessGranted ? /*#__PURE__*/React.createElement(React.Fragment, null, this.props.children) : null;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var location = props.location,\n          userRole = props.userRole;\n      var pathname = location.pathname;\n      var matched = matchRoutes(state.routes, pathname)[0];\n      return {\n        accessGranted: matched ? FuseUtils.hasPermission(matched.route.auth, userRole) : true\n      };\n    }\n  }]);\n\n  return FuseAuthorization;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  return {\n    userRole: auth.user.role\n  };\n}\n\nFuseAuthorization.contextType = AppContext;\nexport default withRouter(connect(mapStateToProps)(FuseAuthorization));","map":{"version":3,"sources":["D:/Projects/live/src/@fuse/core/FuseAuthorization/FuseAuthorization.js"],"names":["FuseUtils","AppContext","React","Component","connect","matchRoutes","withRouter","FuseAuthorization","props","context","routes","state","accessGranted","redirectRoute","nextProps","nextState","location","userRole","history","pathname","redirectUrl","length","push","children","matched","hasPermission","route","auth","mapStateToProps","user","role","contextType"],"mappings":"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","sourcesContent":["import FuseUtils from '@fuse/utils';\nimport AppContext from 'app/AppContext';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { matchRoutes } from 'react-router-config';\nimport { withRouter } from 'react-router-dom';\n\nclass FuseAuthorization extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props);\n\t\tconst { routes } = context;\n\t\tthis.state = {\n\t\t\taccessGranted: true,\n\t\t\troutes\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif (!this.state.accessGranted) {\n\t\t\tthis.redirectRoute();\n\t\t}\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn nextState.accessGranted !== this.state.accessGranted;\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (!this.state.accessGranted) {\n\t\t\tthis.redirectRoute();\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromProps(props, state) {\n\t\tconst { location, userRole } = props;\n\t\tconst { pathname } = location;\n\n\t\tconst matched = matchRoutes(state.routes, pathname)[0];\n\n\t\treturn {\n\t\t\taccessGranted: matched ? FuseUtils.hasPermission(matched.route.auth, userRole) : true\n\t\t};\n\t}\n\n\tredirectRoute() {\n\t\tconst { location, userRole, history } = this.props;\n\t\tconst { pathname, state } = location;\n\t\tconst redirectUrl = state && state.redirectUrl ? state.redirectUrl : '/';\n\n\t\t/*\n        User is guest\n        Redirect to Login Page\n        */\n\t\tif (!userRole || userRole.length === 0) {\n\t\t\thistory.push({\n\t\t\t\tpathname: '/login',\n\t\t\t\tstate: { redirectUrl: pathname }\n\t\t\t});\n\t\t} else {\n\t\t\t/*\n        User is member\n        User must be on unAuthorized page or just logged in\n        Redirect to dashboard or redirectUrl\n        */\n\t\t\thistory.push({\n\t\t\t\tpathname: redirectUrl\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\t// console.info('Fuse Authorization rendered', accessGranted);\n\t\treturn this.state.accessGranted ? <>{this.props.children}</> : null;\n\t}\n}\n\nfunction mapStateToProps({ auth }) {\n\treturn {\n\t\tuserRole: auth.user.role\n\t};\n}\n\nFuseAuthorization.contextType = AppContext;\n\nexport default withRouter(connect(mapStateToProps)(FuseAuthorization));\n"]},"metadata":{},"sourceType":"module"}