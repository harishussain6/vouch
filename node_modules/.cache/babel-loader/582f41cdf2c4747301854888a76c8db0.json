{"ast":null,"code":"import _objectSpread from\"D:\\\\Projects\\\\live\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import firebaseService from'app/services/firebaseService';import jwtService from'app/services/jwtService';import*as Actions from'app/store/actions';import*as UserActions from'./user.actions';export var REGISTER_ERROR='REGISTER_ERROR';export var REGISTER_SUCCESS='REGISTER_SUCCESS';export function submitRegister(_ref){var displayName=_ref.displayName,password=_ref.password,email=_ref.email;return function(dispatch){return jwtService.createUser({displayName:displayName,password:password,email:email}).then(function(user){dispatch(UserActions.setUserData(user));return dispatch({type:REGISTER_SUCCESS});}).catch(function(error){return dispatch({type:REGISTER_ERROR,payload:error});});};}export function registerWithFirebase(model){if(!firebaseService.auth){console.warn(\"Firebase Service didn't initialize, check your configuration\");return function(){return false;};}var email=model.email,password=model.password,displayName=model.displayName;return function(dispatch){return firebaseService.auth.createUserWithEmailAndPassword(email,password).then(function(response){dispatch(UserActions.createUserSettingsFirebase(_objectSpread(_objectSpread({},response.user),{},{displayName:displayName,email:email})));return dispatch({type:REGISTER_SUCCESS});}).catch(function(error){var usernameErrorCodes=['auth/operation-not-allowed','auth/user-not-found','auth/user-disabled'];var emailErrorCodes=['auth/email-already-in-use','auth/invalid-email'];var passwordErrorCodes=['auth/weak-password','auth/wrong-password'];var response={email:emailErrorCodes.includes(error.code)?error.message:null,displayName:usernameErrorCodes.includes(error.code)?error.message:null,password:passwordErrorCodes.includes(error.code)?error.message:null};if(error.code==='auth/invalid-api-key'){dispatch(Actions.showMessage({message:error.message}));}return dispatch({type:REGISTER_ERROR,payload:response});});};}","map":null,"metadata":{},"sourceType":"module"}