{"ast":null,"code":"import{Chart}from'react-chartjs-2';Chart.pluginService.register({afterDatasetsDraw:function afterDatasetsDraw(chart,easing){// Only activate the plugin if it's made available\n// in the options\nif(!chart.options.plugins.xLabelsOnTop||chart.options.plugins.xLabelsOnTop&&chart.options.plugins.xLabelsOnTop.active===false){return;}// To only draw at the end of animation, check for easing === 1\nvar ctx=chart.ctx;chart.data.datasets.forEach(function(dataset,i){var meta=chart.getDatasetMeta(i);if(!meta.hidden){meta.data.forEach(function(element,index){// Draw the text in black, with the specified font\nctx.fillStyle='rgba(255, 255, 255, 0.7)';var fontSize=13;var fontStyle='normal';var fontFamily='Muli, Roboto, Helvetica Neue, Arial, sans-serif';ctx.font=Chart.helpers.fontString(fontSize,fontStyle,fontFamily);// Just naively convert to string for now\nvar dataString=\"\".concat(dataset.data[index].toString(),\"k\");// Make sure alignment settings are correct\nctx.textAlign='center';ctx.textBaseline='middle';var padding=15;var startY=24;var position=element.tooltipPosition();ctx.fillText(dataString,position.x,startY);ctx.save();ctx.beginPath();ctx.setLineDash([5,3]);ctx.moveTo(position.x,startY+padding);ctx.lineTo(position.x,position.y-padding);ctx.strokeStyle='rgba(255,255,255,0.54)';ctx.stroke();ctx.restore();});}});}});","map":null,"metadata":{},"sourceType":"module"}