{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\live\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\live\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport Auth0Lock from 'auth0-lock';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport AUTH_CONFIG from './auth0ServiceConfig';\n\nvar Auth0Service = /*#__PURE__*/function () {\n  function Auth0Service() {\n    var _this = this;\n\n    _classCallCheck(this, Auth0Service);\n\n    this.sdk = {\n      auth0Manage: null\n    };\n\n    this.login = function () {\n      if (!_this.lock) {\n        console.warn(\"Auth0 Service didn't initialize, check your configuration\");\n        return false;\n      } // Call the show method to display the widget.\n\n\n      return _this.lock.show();\n    };\n\n    this.register = function () {\n      if (!_this.lock) {\n        console.warn(\"Auth0 Service didn't initialize, check your configuration\");\n        return false;\n      }\n\n      return _this.lock.show({\n        initialScreen: 'signUp'\n      });\n    };\n\n    this.handleAuthentication = function () {\n      if (!_this.lock) {\n        return false;\n      } // Add a callback for Lock's `authenticated` event\n\n\n      _this.lock.on('authenticated', _this.setSession); // Add a callback for Lock's `authorization_error` event\n\n\n      _this.lock.on('authorization_error', function (err) {\n        console.warn(\"Error: \".concat(err.error, \". Check the console for further details.\"));\n      });\n\n      return true;\n    };\n\n    this.onAuthenticated = function (callback) {\n      if (!_this.lock) {\n        return false;\n      }\n\n      return _this.lock.on('authenticated', callback);\n    };\n\n    this.setSession = function (authResult) {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        // Set the time that the access token will expire at\n        var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n        localStorage.setItem('access_token', authResult.accessToken);\n        localStorage.setItem('id_token', authResult.idToken);\n        localStorage.setItem('expires_at', expiresAt);\n      }\n    };\n\n    this.logout = function () {\n      // Clear access token and ID token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at');\n      localStorage.removeItem('auth0.ssodata');\n    };\n\n    this.isAuthenticated = function () {\n      if (!_this.lock) {\n        return false;\n      } // Check whether the current time is past the\n      // access token's expiry time\n\n\n      var expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n      var isNotExpired = new Date().getTime() < expiresAt;\n\n      if (isNotExpired) {\n        return true;\n      }\n\n      _this.logout();\n\n      return false;\n    };\n\n    this.getUserData = function () {\n      return new Promise(function (resolve, reject) {\n        var tokenData = _this.getTokenData();\n\n        var userId = tokenData.sub;\n        var auth0UserUrl = \"https://\".concat(AUTH_CONFIG.domain, \"/api/v2/users/\").concat(userId);\n        axios.get(auth0UserUrl, {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: \"Bearer \".concat(_this.getAccessToken())\n          }\n        }).then(function (response) {\n          resolve(response.data);\n        }).catch(function (error) {\n          // handle error\n          console.warn('Cannot retrieve user data', error);\n          reject(error);\n        });\n      });\n    };\n\n    this.updateUserData = function (userMetadata) {\n      var tokenData = _this.getTokenData();\n\n      var userId = tokenData.sub;\n      var auth0UserUrl = \"https://\".concat(AUTH_CONFIG.domain, \"/api/v2/users/\").concat(userId);\n      var dataObj = JSON.stringify({\n        user_metadata: userMetadata\n      });\n      return axios.patch(auth0UserUrl, dataObj, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: \"Bearer \".concat(_this.getAccessToken())\n        }\n      });\n    };\n\n    this.getAccessToken = function () {\n      return localStorage.getItem('access_token');\n    };\n\n    this.getIdToken = function () {\n      return window.localStorage.getItem('id_token');\n    };\n\n    this.getTokenData = function () {\n      var token = _this.getIdToken();\n\n      var decoded = jwtDecode(token);\n\n      if (!decoded) {\n        return null;\n      }\n\n      return decoded;\n    };\n  }\n\n  _createClass(Auth0Service, [{\n    key: \"init\",\n    value: function init(success) {\n      if (Object.entries(AUTH_CONFIG).length === 0 && AUTH_CONFIG.constructor === Object) {\n        if (process.env.NODE_ENV === 'development') {\n          console.warn('Missing Auth0 configuration at src/app/services/auth0Service/auth0ServiceConfig.js');\n        }\n\n        success(false);\n        return;\n      }\n\n      this.lock = new Auth0Lock(AUTH_CONFIG.clientId, AUTH_CONFIG.domain, {\n        autoclose: true,\n        socialButtonStyle: 'big',\n        auth: {\n          // redirect: false,\n          redirectUrl: AUTH_CONFIG.callbackUrl,\n          responseType: 'token id_token',\n          audience: \"https://\".concat(AUTH_CONFIG.domain, \"/api/v2/\"),\n          params: {\n            scope: 'openid profile email user_metadata app_metadata picture update:current_user_metadata create:current_user_metadata read:current_user'\n          }\n        }\n      });\n      this.handleAuthentication();\n      success(true);\n    }\n  }]);\n\n  return Auth0Service;\n}();\n\nvar instance = new Auth0Service();\nexport default instance;","map":{"version":3,"sources":["D:/Projects/live/src/app/services/auth0Service/auth0Service.js"],"names":["Auth0Lock","axios","jwtDecode","AUTH_CONFIG","Auth0Service","sdk","auth0Manage","login","lock","console","warn","show","register","initialScreen","handleAuthentication","on","setSession","err","error","onAuthenticated","callback","authResult","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","logout","removeItem","isAuthenticated","parse","getItem","isNotExpired","getUserData","Promise","resolve","reject","tokenData","getTokenData","userId","sub","auth0UserUrl","domain","get","headers","Authorization","getAccessToken","then","response","data","catch","updateUserData","userMetadata","dataObj","user_metadata","patch","getIdToken","window","token","decoded","success","Object","entries","length","constructor","process","env","NODE_ENV","clientId","autoclose","socialButtonStyle","auth","redirectUrl","callbackUrl","responseType","audience","params","scope","instance"],"mappings":"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","sourcesContent":["import Auth0Lock from 'auth0-lock';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport AUTH_CONFIG from './auth0ServiceConfig';\n\nclass Auth0Service {\n\tsdk = { auth0Manage: null };\n\n\tinit(success) {\n\t\tif (Object.entries(AUTH_CONFIG).length === 0 && AUTH_CONFIG.constructor === Object) {\n\t\t\tif (process.env.NODE_ENV === 'development') {\n\t\t\t\tconsole.warn('Missing Auth0 configuration at src/app/services/auth0Service/auth0ServiceConfig.js');\n\t\t\t}\n\t\t\tsuccess(false);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lock = new Auth0Lock(AUTH_CONFIG.clientId, AUTH_CONFIG.domain, {\n\t\t\tautoclose: true,\n\t\t\tsocialButtonStyle: 'big',\n\t\t\tauth: {\n\t\t\t\t// redirect: false,\n\t\t\t\tredirectUrl: AUTH_CONFIG.callbackUrl,\n\t\t\t\tresponseType: 'token id_token',\n\t\t\t\taudience: `https://${AUTH_CONFIG.domain}/api/v2/`,\n\t\t\t\tparams: {\n\t\t\t\t\tscope:\n\t\t\t\t\t\t'openid profile email user_metadata app_metadata picture update:current_user_metadata create:current_user_metadata read:current_user'\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.handleAuthentication();\n\t\tsuccess(true);\n\t}\n\n\tlogin = () => {\n\t\tif (!this.lock) {\n\t\t\tconsole.warn(\"Auth0 Service didn't initialize, check your configuration\");\n\n\t\t\treturn false;\n\t\t}\n\t\t// Call the show method to display the widget.\n\t\treturn this.lock.show();\n\t};\n\n\tregister = () => {\n\t\tif (!this.lock) {\n\t\t\tconsole.warn(\"Auth0 Service didn't initialize, check your configuration\");\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.lock.show({\n\t\t\tinitialScreen: 'signUp'\n\t\t});\n\t};\n\n\thandleAuthentication = () => {\n\t\tif (!this.lock) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add a callback for Lock's `authenticated` event\n\t\tthis.lock.on('authenticated', this.setSession);\n\t\t// Add a callback for Lock's `authorization_error` event\n\t\tthis.lock.on('authorization_error', err => {\n\t\t\tconsole.warn(`Error: ${err.error}. Check the console for further details.`);\n\t\t});\n\n\t\treturn true;\n\t};\n\n\tonAuthenticated = callback => {\n\t\tif (!this.lock) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.lock.on('authenticated', callback);\n\t};\n\n\tsetSession = authResult => {\n\t\tif (authResult && authResult.accessToken && authResult.idToken) {\n\t\t\t// Set the time that the access token will expire at\n\t\t\tconst expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n\t\t\tlocalStorage.setItem('access_token', authResult.accessToken);\n\t\t\tlocalStorage.setItem('id_token', authResult.idToken);\n\t\t\tlocalStorage.setItem('expires_at', expiresAt);\n\t\t}\n\t};\n\n\tlogout = () => {\n\t\t// Clear access token and ID token from local storage\n\t\tlocalStorage.removeItem('access_token');\n\t\tlocalStorage.removeItem('id_token');\n\t\tlocalStorage.removeItem('expires_at');\n\t\tlocalStorage.removeItem('auth0.ssodata');\n\t};\n\n\tisAuthenticated = () => {\n\t\tif (!this.lock) {\n\t\t\treturn false;\n\t\t}\n\t\t// Check whether the current time is past the\n\t\t// access token's expiry time\n\t\tconst expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n\t\tconst isNotExpired = new Date().getTime() < expiresAt;\n\t\tif (isNotExpired) {\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.logout();\n\t\treturn false;\n\t};\n\n\tgetUserData = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst tokenData = this.getTokenData();\n\t\t\tconst { sub: userId } = tokenData;\n\n\t\t\tconst auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n\n\t\t\taxios\n\t\t\t\t.get(auth0UserUrl, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\tAuthorization: `Bearer ${this.getAccessToken()}`\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(response => {\n\t\t\t\t\tresolve(response.data);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\t// handle error\n\t\t\t\t\tconsole.warn('Cannot retrieve user data', error);\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t});\n\t};\n\n\tupdateUserData = userMetadata => {\n\t\tconst tokenData = this.getTokenData();\n\t\tconst { sub: userId } = tokenData;\n\n\t\tconst auth0UserUrl = `https://${AUTH_CONFIG.domain}/api/v2/users/${userId}`;\n\t\tconst dataObj = JSON.stringify({ user_metadata: userMetadata });\n\n\t\treturn axios.patch(auth0UserUrl, dataObj, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${this.getAccessToken()}`\n\t\t\t}\n\t\t});\n\t};\n\n\tgetAccessToken = () => {\n\t\treturn localStorage.getItem('access_token');\n\t};\n\n\tgetIdToken = () => {\n\t\treturn window.localStorage.getItem('id_token');\n\t};\n\n\tgetTokenData = () => {\n\t\tconst token = this.getIdToken();\n\t\tconst decoded = jwtDecode(token);\n\t\tif (!decoded) {\n\t\t\treturn null;\n\t\t}\n\t\treturn decoded;\n\t};\n}\n\nconst instance = new Auth0Service();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}