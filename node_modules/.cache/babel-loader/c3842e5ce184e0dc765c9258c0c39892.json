{"ast":null,"code":"import{makeStyles}from'@material-ui/core/styles';import clsx from'clsx';import MobileDetect from'mobile-detect';import PerfectScrollbar from'perfect-scrollbar';import'perfect-scrollbar/css/perfect-scrollbar.css';import React,{createRef,useCallback,useEffect,useRef}from'react';import{connect}from'react-redux';import withRouterAndRef from'../withRouterAndRef/withRouterAndRef';var md=new MobileDetect(window.navigator.userAgent);var isMobile=md.mobile();var handlerNameByEvent={'ps-scroll-y':'onScrollY','ps-scroll-x':'onScrollX','ps-scroll-up':'onScrollUp','ps-scroll-down':'onScrollDown','ps-scroll-left':'onScrollLeft','ps-scroll-right':'onScrollRight','ps-y-reach-start':'onYReachStart','ps-y-reach-end':'onYReachEnd','ps-x-reach-start':'onXReachStart','ps-x-reach-end':'onXReachEnd'};Object.freeze(handlerNameByEvent);var useStyles=makeStyles(function(theme){return{root:{}};});var FuseScrollbars=React.forwardRef(function(props,ref){ref=ref||createRef();var ps=useRef(null);var handlerByEvent=useRef(new Map());var classes=useStyles();var customScrollbars=props.customScrollbars;var hookUpEvents=useCallback(function(){Object.keys(handlerNameByEvent).forEach(function(key){var callback=props[handlerNameByEvent[key]];if(callback){var handler=function handler(){return callback(ref.current);};handlerByEvent.current.set(key,handler);ref.current.addEventListener(key,handler,false);}});// eslint-disable-next-line\n},[ref]);var unHookUpEvents=useCallback(function(){handlerByEvent.current.forEach(function(value,key){if(ref.current){ref.current.removeEventListener(key,value,false);}});handlerByEvent.current.clear();},[ref]);var destroyPs=useCallback(function(){// console.info(\"destroy::ps\");\nunHookUpEvents();if(!ps.current){return;}ps.current.destroy();ps.current=null;},[unHookUpEvents]);var createPs=useCallback(function(){// console.info(\"create::ps\");\nif(isMobile||!ref||ps.current){return;}ps.current=new PerfectScrollbar(ref.current,props.option);hookUpEvents();},[hookUpEvents,props.option,ref]);useEffect(function(){function updatePs(){if(!ps.current){return;}ps.current.update();}updatePs();});useEffect(function(){if(customScrollbars){createPs();}else{destroyPs();}},[createPs,customScrollbars,destroyPs]);var scrollToTop=useCallback(function(){if(ref&&ref.current){ref.current.scrollTop=0;}},[ref]);useEffect(function(){if(props.scrollToTopOnChildChange){scrollToTop();}},[scrollToTop,props.children,props.scrollToTopOnChildChange]);useEffect(function(){return props.history.listen(function(){if(props.scrollToTopOnRouteChange){scrollToTop();}});},[scrollToTop,props.history,props.scrollToTopOnRouteChange]);useEffect(function(){return function(){destroyPs();};},[destroyPs]);// console.info('render::ps');\nreturn/*#__PURE__*/React.createElement(\"div\",{id:props.id,className:clsx(classes.root,props.className),style:props.customScrollbars&&(props.enable||true)&&!isMobile?{position:'relative',overflow:'hidden'}:{},ref:ref},props.children);});function mapStateToProps(_ref){var fuse=_ref.fuse;return{customScrollbars:fuse.settings.current.customScrollbars};}FuseScrollbars.defaultProps={className:'',enable:true,scrollToTopOnChildChange:false,scrollToTopOnRouteChange:false,option:{wheelPropagation:true},ref:undefined,onScrollY:undefined,onScrollX:undefined,onScrollUp:undefined,onScrollDown:undefined,onScrollLeft:undefined,onScrollRight:undefined,onYReachStart:undefined,onYReachEnd:undefined,onXReachStart:undefined,onXReachEnd:undefined};export default connect(mapStateToProps,null,null,{forwardRef:true})(withRouterAndRef(FuseScrollbars));","map":null,"metadata":{},"sourceType":"module"}